{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/noteServiceClient.js","components/Notification.js","components/SuccessMessage.js","App.js","index.js"],"names":["Persons","results","handleDelete","mapping","map","result","key","id","name","number","onClick","value","Filter","handleNameFilter","searchTerm","onChange","placeholder","PersonForm","addNewPerson","newName","handleNameChange","handleNumberChange","newNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","errorMessage","className","SuccessMessage","successMessage","App","useState","persons","setPersons","setNewName","setnewNumber","setsearchTerm","setErrorMessage","setSuccessMessage","useEffect","serviceClient","initialPersons","catch","error","console","log","filter","param","toLowerCase","includes","toLocaleLowerCase","e","target","preventDefault","personObject","mapPersons","length","alert","window","confirm","find","update","n","changedNum","noteServiceClient","returnedPerson","per","setTimeout","concat","stringifyResult","JSON","stringify","copyOfPersons","findId","filterById","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a79a5c8f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Persons = ({ results, handleDelete }) => {\r\n  let mapping = results.map((result) => {\r\n    return (\r\n      <li key={result.id}>\r\n        {result.name} {result.number}\r\n        <button onClick={handleDelete} value={result.id}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <>{mapping}</>;\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ handleNameFilter, searchTerm }) => {\r\n  return (\r\n    <div>\r\n      Filter shown with\r\n      <input\r\n        value={searchTerm}\r\n        onChange={handleNameFilter}\r\n        placeholder='Search'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n  addNewPerson,\r\n  newName,\r\n  handleNameChange,\r\n  handleNumberChange,\r\n  newNumber,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <form onSubmit={addNewPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number:{' '}\r\n          <input\r\n            type='number'\r\n            value={newNumber}\r\n            onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <button type='submit'>add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, remove, update };\r\n","import React from 'react';\r\n\r\nconst Notification = ({ errorMessage }) => {\r\n  if (errorMessage === null) {\r\n    return null;\r\n  }\r\n  return <div className='error'>{errorMessage}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst SuccessMessage = ({ successMessage }) => {\r\n  if (successMessage === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className='success'>{successMessage}</div>;\r\n};\r\n\r\nexport default SuccessMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./components/Persons\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\n\r\nimport serviceClient from \"./services/noteServiceClient\";\r\nimport noteServiceClient from \"./services/noteServiceClient\";\r\n\r\nimport Notification from \"./components/Notification\";\r\nimport SuccessMessage from \"./components/SuccessMessage\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setnewNumber] = useState(\"\");\r\n  const [searchTerm, setsearchTerm] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n  //Get data:\r\n\r\n  useEffect(() => {\r\n    serviceClient\r\n      .getAll()\r\n      .then((initialPersons) => {\r\n        setPersons(initialPersons);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  }, []);\r\n\r\n  const addNewPerson = (e) => {\r\n    e.preventDefault();\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    let copyOfPersons = [...persons];\r\n\r\n    let mapPersons = copyOfPersons.map((param) => {\r\n      return param.name;\r\n    });\r\n\r\n    if (\r\n      mapPersons.includes(personObject.name) &&\r\n      personObject.number.length === 0\r\n    ) {\r\n      alert(`${newName} is already added to phonebook`);\r\n\r\n      return;\r\n    }\r\n\r\n    //Modify phone number of person in a list:\r\n\r\n    if (\r\n      mapPersons.includes(personObject.name) &&\r\n      personObject.number.length > 0\r\n    ) {\r\n      if (\r\n        window.confirm(`${newName} is already added to phonebook, replace the\r\n    old number with a new one?`)\r\n      ) {\r\n        const mappia = persons.find(({ name }) => name === `${newName}`);\r\n\r\n        const id = mappia.id;\r\n        const update = persons.find((n) => n.id === id);\r\n        const changedNum = { ...update, number: personObject.number };\r\n\r\n        noteServiceClient\r\n          .update(id, changedNum)\r\n          .then((returnedPerson) => {\r\n            setPersons(\r\n              persons.map((per) => (per.id !== id ? per : returnedPerson))\r\n            );\r\n            setSuccessMessage(`Changed ${newName}'s phone number successfully`);\r\n            setTimeout(() => {\r\n              setSuccessMessage(null);\r\n            }, 5000);\r\n          })\r\n\r\n          .catch((error) => {\r\n            console.log(\"error on put:\", error);\r\n            setErrorMessage(\r\n              `Information of ${newName} has already been removed from server`\r\n            );\r\n            setTimeout(() => {\r\n              setErrorMessage(null);\r\n            }, 5000);\r\n            setPersons(persons.filter((n) => n.id !== id));\r\n          });\r\n      }\r\n    }\r\n\r\n    //create person:\r\n    else {\r\n      noteServiceClient\r\n        .create(personObject)\r\n        .then((newObject) => {\r\n          setPersons(persons.concat(newObject));\r\n          setSuccessMessage(`Added ${newName}`);\r\n          setTimeout(() => {\r\n            setSuccessMessage(null);\r\n          }, 5000);\r\n        })\r\n        .catch((error) => {\r\n          // console.log(\"error.response.data:\", error.response.data);\r\n\r\n          // console.log(\"objecti:\", personObject);\r\n\r\n          let stringifyResult = JSON.stringify(error.response.data);\r\n          // let myJSON = JSON.stringify(moi1);\r\n\r\n          if (personObject.name.length < 3 || personObject.number.length < 8) {\r\n            setErrorMessage(`${stringifyResult}`);\r\n          }\r\n        });\r\n    }\r\n\r\n    setNewName(\"\");\r\n\r\n    setnewNumber(\"\");\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    setnewNumber(e.target.value);\r\n  };\r\n\r\n  const handleNameFilter = (e) => {\r\n    setsearchTerm(e.target.value);\r\n  };\r\n\r\n  const results = !searchTerm\r\n    ? persons\r\n    : persons.filter((param) =>\r\n        param.name.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n      );\r\n\r\n  const handleDelete = (e) => {\r\n    const id = e.target.value;\r\n\r\n    let copyOfPersons = [...persons];\r\n\r\n    let findId = { ...persons.find((param) => param.id === id) };\r\n\r\n    if (window.confirm(`Delete ${findId.name} ?`)) {\r\n      noteServiceClient\r\n        .remove(id)\r\n        .then(() => {\r\n          const filterById = copyOfPersons.filter((param) => param.id !== id);\r\n\r\n          setPersons(filterById);\r\n          setSuccessMessage(`Deleted name '${findId.name}' successfully`);\r\n          setTimeout(() => {\r\n            setSuccessMessage(null);\r\n          }, 5000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"delete error:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification errorMessage={errorMessage} />\r\n      <SuccessMessage successMessage={successMessage} />\r\n\r\n      <Filter searchTerm={searchTerm} handleNameFilter={handleNameFilter} />\r\n\r\n      <h3>Add a new</h3>\r\n\r\n      <PersonForm\r\n        addNewPerson={addNewPerson}\r\n        newName={newName}\r\n        handleNameChange={handleNameChange}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons results={results} handleDelete={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}